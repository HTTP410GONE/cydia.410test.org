#!/bin/bash
function usage()
{
      read listPackages
        case "$listPackages" in
          y|Y)
              endnumber=`j=0;for i in $(dpkg --get-selections | awk '{print $1}'|grep -v gsc|grep -v "^cy+");do echo $j:$i;j=$[j+1];done|tail -1|awk -F ":" '{print $1}'`
        j=0;for i in $(dpkg --get-selections | awk '{print $1}'|grep -v gsc|grep -v "^cy+");do echo $bldblu$j:$txtrst$i;j=$[j+1];done
              read packageNum

             case "$packageNum" in
                    ''|*[!0-9]*)
                        exit 1
                        ;;
                      *)
                        endnumber=`j=0;for i in $(dpkg --get-selections | awk '{print $1}'|grep -v gsc|grep -v "^cy+");do echo $j:$i;j=$[j+1];done|tail -1|awk -F ":" '{print $1}'`
                        if [[ "$packageNum" -gt "$endnumber" ]] ; then
                          exit 1
                        else
                          packageID=`j=0;for i in $(dpkg --get-selections | awk '{print $1}'|grep -v gsc|grep -v "^cy+");do echo $j:$i;j=$[j+1];done | grep -e "$packageNum" | head -1 |awk -F ":" '{print $2}'`
                          BUNDLEID="$packageID"
                        fi
                        ;;
              esac
            ;;

          n|N)
              exit 1
              ;;

            *) exit 1
               ;;
        esac
}
export REDEB="/lib410/Resources/neon/temp/deb-backup"
if [ -d "$REDEB" ];
  FALSE="false"
else
    mkdir -p $REDEB
    
fi
exec > >(tee /lib410/Resources/neon/temp/deb-backup-log/extractionengine.log)
exec 2>/lib410/Resources/neon/temp/deb-backup-log/extractionengine.err
badName=`dpkg --get-selections | grep -i $1`
if [ "$1" = "" ]; then
  usage
elif [ -z "$badName" ]; then
  usage
else
  BUNDLEID="$1"
fi
DEB="$BUNDLEID".deb
export ROOTDIR="/lib410/Resources/neon/temp/deb-backupQuery/$BUNDLEID"
export DebsFolder="/lib410/Resources/neon/temp/deb-backup/"
if [ -d "$DebsFolder" ]; then
    else
        mkdir -p $DebsFolder
        
fi
sleep 1
if [ -d "$ROOTDIR" ]; then
  FALSE="false"
   else
        mkdir -pv $ROOTDIR
        
fi
sleep 1
if [ -d "$ROOTDIR"/DEBIAN/ ]; then
  FALSE="false"
else
  mkdir $ROOTDIR/DEBIAN/
        FALSE="false"
fi
sleep 1

if [ -f "$ROOTDIR"/DEBIAN/control ]; then
     FALSE="false"
else
     /usr/bin/dpkg-query -s "$BUNDLEID" | grep -v Status>>"$ROOTDIR"/DEBIAN/control
     sleep 1
        if [ -f "$ROOTDIR"/DEBIAN/control ]; then
          FALSE="false"
        fi
fi
SAVEIFS=$IFS
IFS=$'\n'
FILES=`/usr/bin/dpkg-query -L "$BUNDLEID"|sed "1 d"`
for i in $FILES 
do
  if [ -d "$i" ]
  then
    newdirpath=`echo "$ROOTDIR$i"`
    mkdir -p $newdirpath
  elif [ -f "$i" ]
  then
    newfilepath=`echo "$ROOTDIR$i"`
    cp -p $i $newfilepath
   fi
done

sleep 1

if [[ -d "$ROOTDIR"/DEBIAN && -f "$ROOTDIR"/DEBIAN/control ]]; then
sleep 1
fi
sleep 2
dpkg-deb -bZgzip $ROOTDIR $DebsFolder

if [[ -f "$DebsFolder"/"$DEB" && -d "$ROOTDIR" ]];then
  rm -r $ROOTDIR
fi
